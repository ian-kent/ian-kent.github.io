<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Testing on Ian Kent</title>
    <link>http://yourSiteHere/categories/testing/</link>
    <description>Recent content in Testing on Ian Kent</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
    
    <lastBuildDate>Sun, 20 Apr 2014 16:36:34 &#43;0000</lastBuildDate>
    <atom:link href="http://yourSiteHere/categories/testing/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Introducing Go-MailHog</title>
      <link>http://yoursitehere/introducing-go-mailhog/</link>
      <pubDate>Sun, 20 Apr 2014 16:36:34 &#43;0000</pubDate>
      
      <guid>http://yoursitehere/introducing-go-mailhog/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/ian-kent/Go-MailHog&#34;&gt;Go-MailHog&lt;/a&gt; is a lightweight portable application which acts like a SMTP server.&lt;/p&gt;

&lt;p&gt;It was inspired by &lt;a href=&#34;http://mailcatcher.me/&#34;&gt;MailCatcher&lt;/a&gt;, and does almost exactly the same thing, but without the slow and painful installation you get with Python Ruby.&lt;/p&gt;

&lt;p&gt;| edit: it was Ruby, not Python - but painful nonetheless!&lt;/p&gt;

&lt;p&gt;It was originally written in Perl based on code from &lt;a href=&#34;https://github.com/ian-kent/M3MTA&#34;&gt;M3MTA&lt;/a&gt;, but it&amp;rsquo;s been rewritten in Go for portability, and now runs on any supported platform without installation.&lt;/p&gt;

&lt;p&gt;MailHog is designed for testing emails during application development. Instead of using a real SMTP server which delivers messages or has strict rules on email recipients, you can use MailHog and send messages to any email address with a valid format.&lt;/p&gt;

&lt;p&gt;Instead of delivering the messages, they&amp;rsquo;re stored in MongoDB (edit: or memory!), and you can view them using the MailHog web interface, or retrieve them using an API for automated testing.&lt;/p&gt;

&lt;p&gt;Using MailHog is as simple as &lt;a href=&#34;https://github.com/ian-kent/Go-MailHog/releases&#34;&gt;downloading the binary release from GitHub&lt;/a&gt; and running it.&lt;/p&gt;

&lt;p&gt;With no configuration, it will listen on port 1025 for SMTP, 8025 for HTTP (both web and API), and will connect to MongoDB running on localhost port 27017.&lt;/p&gt;

&lt;p&gt;To view messages, point your browser at &lt;code&gt;http://localhost:8025&lt;/code&gt; or send a GET request to &lt;code&gt;http://localhost:8025/api/v1/messages&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://iankent.co.uk/wp-content/uploads/2014/04/MailHog.png&#34;&gt;&lt;img src=&#34;http://iankent.co.uk/wp-content/uploads/2014/04/MailHog.png&#34; alt=&#34;MailHog&#34; /&gt;
&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The automation what-for</title>
      <link>http://yoursitehere/the-automation-what-for/</link>
      <pubDate>Tue, 25 Feb 2014 21:23:04 GMT</pubDate>
      
      <guid>http://yoursitehere/the-automation-what-for/</guid>
      <description>

&lt;p&gt;Today, our developers and testers were asked to justify the use of test automation - a surprising question after we&amp;rsquo;ve invested 5 years in writing automated test cases.&lt;/p&gt;

&lt;p&gt;The challenge was to prove the value in continuing to automate our test cases, on the basis that it should be up to scrutiny if the value really does exist.&lt;/p&gt;

&lt;h4 id=&#34;so-we-tried:0ce8429d54ada539b10abd45c7aa53e0&#34;&gt;So we tried&amp;hellip;&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Automated tests are repeatable and consistent&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Automated tests and testing platforms can be easily scaled as the code base grows&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Automated tests can be executed concurrently against many environments&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Automated tests can provide rapid feedback on system/code changes&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;of-course-the-same-isn-t-true-for-manual-testing:0ce8429d54ada539b10abd45c7aa53e0&#34;&gt;Of course, the same isn&amp;rsquo;t true for manual testing&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Manual tests can be unpredictable&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;different testers may produce different results&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;testers may use workarounds to avoid some bugs&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Manual testing isn&amp;rsquo;t scalable - employing more people is the only option&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;An individual tester can only (sensibly) test one environment at a time&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Manual tests are slow - feedback might take days, weeks or months&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;but-these-weren-t-the-right-answers:0ce8429d54ada539b10abd45c7aa53e0&#34;&gt;But these weren&amp;rsquo;t the right answers.&lt;/h3&gt;

&lt;p&gt;We couldn&amp;rsquo;t understand why.&lt;/p&gt;

&lt;p&gt;So, lets have a closer look at automation&amp;hellip;&lt;/p&gt;

&lt;h2 id=&#34;what-is-automation:0ce8429d54ada539b10abd45c7aa53e0&#34;&gt;What is automation?&lt;/h2&gt;

&lt;p&gt;Automation, by definition, is:&lt;/p&gt;

&lt;blockquote&gt;
  
&gt; 
&gt; the technique, method, or system of operating or controlling a process by highly automatic means, as by electronic devices, reducing human intervention to a minimum
&gt; 
&gt; 
&lt;/blockquote&gt;

&lt;p&gt;Originally used circa 1940, the word was an irregular formation combining &amp;ldquo;automatic&amp;rdquo; and &amp;ldquo;action&amp;rdquo;, but process automation had become a well established practice long before then.&lt;/p&gt;

&lt;p&gt;Everything from manufacturing and agriculture to construction and transportation - in modern history, humans have automated nearly every aspect of their lives.&lt;/p&gt;

&lt;p&gt;On an industrial scale the benefits are immediately obvious. A farmer wouldn&amp;rsquo;t employ manual labour to plough fields any more than a car manufacturer would employ manual labour to assemble cars.&lt;/p&gt;

&lt;p&gt;The return on investment (ROI) for the automation of these processes is clear - though of course it wasn&amp;rsquo;t in the decades leading up to the industrial revolution.&lt;/p&gt;

&lt;h2 id=&#34;why-do-we-automate-things:0ce8429d54ada539b10abd45c7aa53e0&#34;&gt;Why do we automate things?&lt;/h2&gt;

&lt;p&gt;There are many reasons to automate processes - some are purely economic while others are psychological.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Simple or boring tasks (paying bills)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Time consuming tasks (washing dishes)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Beyond our physical capability (lifting shipping containers)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;To reduce cost (human labour)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;To reduce risk (bomb disposal robots)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In all cases, our ability to automate something is limited by our mental capacity to perform that task. We can only automate the things we understand, that are simple enough and repeatable enough. We can&amp;rsquo;t easily automate tasks requiring creativity or emotion.&lt;/p&gt;

&lt;p&gt;For example, we can easily automate opening a shop door (we &lt;em&gt;could&lt;/em&gt; do it manually), but we would find it difficult to automate brain surgery (most humans couldn&amp;rsquo;t do it even manually) or software engineering (many have tried).&lt;/p&gt;

&lt;p&gt;But sometimes, even when a process can be automated, we decide not to.&lt;/p&gt;

&lt;h2 id=&#34;why-do-we-choose-not-to-automate-things:0ce8429d54ada539b10abd45c7aa53e0&#34;&gt;Why do we choose not to automate things?&lt;/h2&gt;

&lt;p&gt;Just as there are some processes we would like to automate, but can&amp;rsquo;t - there are some processes we could automate, but don&amp;rsquo;t:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Things we enjoy doing&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Economic cost, e.g. R&amp;amp;D investment is too high or unpredictable&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Social cost, e.g. unemployment and poverty&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Like our ability to automate is limited by our mental capacity to perform a task, our ability to choose not to automate is equally limited by our physical limitations in performing a task (we wouldn&amp;rsquo;t even consider using human labour to lift a shipping container).&lt;/p&gt;

&lt;h1 id=&#34;how-we-decide-what-to-automate:0ce8429d54ada539b10abd45c7aa53e0&#34;&gt;How we decide what to automate&lt;/h1&gt;

&lt;p&gt;Deciding whether we automate a process comes down to a cost-benefit analysis, determining if the investment required (whether an economic, physical or psychological investment) is worth the benefit we get in return.&lt;/p&gt;

&lt;p&gt;As with all cost-benefit analysis, the time-frame over which we calculate the costs and benefits can have a considerable impact on the ROI.&lt;/p&gt;

&lt;p&gt;For example, if Ford had only planned to make 1000 cars over a 2 year time frame, then it would be obvious that the ROI on designing, building, testing and deploying an automated car manufacturing process would be terrible, and would probably result in a net loss (or bankruptcy) for the company.&lt;/p&gt;

&lt;p&gt;But if Ford wanted to continue producing cars - maybe another &lt;a href=&#34;http://www.autoblog.com/2012/08/31/ford-focus-is-companys-350th-millionth-vehicle-and-worlds-best/&#34;&gt;350 million cars over a 109 years&lt;/a&gt; - then the ROI becomes far more appealing.&lt;/p&gt;

&lt;p&gt;Although the up-front investment in research and development is high, the long-term benefit of this is exponentially higher, ultimately making Ford one of the world&amp;rsquo;s leading car manufacturers and forging the modern automotive industry.&lt;/p&gt;

&lt;h2 id=&#34;why-software-testing-is-no-different:0ce8429d54ada539b10abd45c7aa53e0&#34;&gt;Why software testing is no different&lt;/h2&gt;

&lt;p&gt;Just like agriculture and manufacturing, automating software testing comes with a high initial (and sometimes on-going) cost:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Developers and testers need to learn how to write automated tests&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Test suites need to be written and maintained&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;An automated testing platform must be created&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And just like agriculture and manufacturing, some of it doesn&amp;rsquo;t need automation (or can&amp;rsquo;t be automated):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;If it&amp;rsquo;s throwaway/one-use code&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Exploratory testing which requires creativity&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Visual testing (does it look/feel right)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But in most cases, well written automated tests provide a level of confidence unmatched by manual testing:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Entire system components can be updated or replaced efficiently&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Codebases can be safely refactored&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Integration and release can be automated&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Fixed defects can&amp;rsquo;t regress&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;More platforms can be tested (desktop, web, mobile, etc)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;By developing an automated testing suite, testing resources can then be reallocated to more productive work:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Improving test coverage&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Collaborating with developers&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Exploratory and visual testing&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Accessibility testing&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;so-what-was-the-answer:0ce8429d54ada539b10abd45c7aa53e0&#34;&gt;So, what was the answer?&lt;/h2&gt;

&lt;p&gt;It certainly won&amp;rsquo;t be &amp;ldquo;because we should&amp;rdquo; or &amp;ldquo;it&amp;rsquo;s the right thing to do&amp;rdquo;, or even &amp;ldquo;it&amp;rsquo;ll reduce defects&amp;rdquo; or &amp;ldquo;it&amp;rsquo;ll improve code quality&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;It will come down to proving, through cost-benefit analysis, that the investment in automated testing provides a strong enough ROI. This will largely depend on the time frame used for the ROI calculation.&lt;/p&gt;

&lt;p&gt;If the focus is short-term (&amp;ldquo;we want a great product now&amp;rdquo;) then any further investment in test automation will yield no value, and manual testing is the only choice.&lt;/p&gt;

&lt;p&gt;But if the focus is long-term (&amp;ldquo;we still want a great product in 5 years&amp;rdquo;) then test automation is invaluable (supplemented with appropriate manual testing), and provably so in any cost-benefit analysis.&lt;/p&gt;

&lt;h3 id=&#34;is-there-a-middle-ground:0ce8429d54ada539b10abd45c7aa53e0&#34;&gt;Is there a middle ground?&lt;/h3&gt;

&lt;p&gt;The middle ground does seem attractive:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Manual testing to get a quick delivery&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Automate tests longer-term&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It seems to promise a good short and long term ROI. We get our quick delivery, to an acceptable standard. We also get our test automation. And eventually we get a high quality product.&lt;/p&gt;

&lt;p&gt;But until the test automation happens, developers are constrained by the existing codebase:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;refactoring becomes difficult or impossible&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;updating components carries significant risk&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;minor changes, bug fixes and features take an inordinate amount of time to develop, test and deploy&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This has a substantial consequence for the product or service being delivered:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;If test automation never happens (no time is made available), the entire product will suffer and eventually adding new features or fixing bugs will become impossible&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;If test automation happens (quickly), new features will be held up while test suites are automated, delaying the creation of business value&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Either way, the middle ground eventually becomes technical debt, and the short term business value gained through a reduction in the initial investment must eventually be repaid (through reduced longer-term value).&lt;/p&gt;

&lt;h2 id=&#34;a-cost-benefit-analysis:0ce8429d54ada539b10abd45c7aa53e0&#34;&gt;A cost-benefit analysis&lt;/h2&gt;

&lt;p&gt;Many cost-benefit analysis of test automation have already been carried out, so I&amp;rsquo;m not going to write &amp;ldquo;Yet Another Cost-Benefit Analysis&amp;rdquo; - but here&amp;rsquo;s a few links instead:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.softwarequalitymethods.com/papers/star99%20model%20paper.pdf&#34;&gt;Cost Benefits Analysis of Test Automation&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.ibm.com/developerworks/rational/library/content/RationalEdge/dec02/TestAutomation_TheRationalEdge_Dec2002.pdf&#34;&gt;The Business Argument for Investing in Test Automation&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.automatedtestinginstitute.com/home/index.php?option=com_content&amp;amp;id=58&amp;amp;Itemid=65&#34;&gt;Return on Investment (ROI) Calculator&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://wiki.directi.com/download/attachments/1703938/Automated+Testing+vs+Manual+Testing.ppt&#34;&gt;Automated Testing vs Manual Testing&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;conclusion:0ce8429d54ada539b10abd45c7aa53e0&#34;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;Given the historical importance of process automation throughout the industrial revolution, the rapid improvement to standards of living that we&amp;rsquo;re still benefiting from today, and the significant expansion of the human race as a result of the earliest technological automation, it seems counter-intuitive to even question the value in automating software testing.&lt;/p&gt;

&lt;p&gt;Though I agree that some tests shouldn&amp;rsquo;t be automated (or can&amp;rsquo;t be), when products or services are expected to have a long &amp;ldquo;shelf-life&amp;rdquo;, test automation becomes the only sensible solution.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s also important to consider the human element in any cost-benefit analysis.&lt;/p&gt;

&lt;p&gt;Testers and developers, like anyone else, get bored easily when tasked with simple and repetitive work. If we have the opportunity to automate this work, we leave humans with the more complex and creative work - the stuff we&amp;rsquo;re really good at, the stuff that we can&amp;rsquo;t automate, and the stuff that&amp;rsquo;s just more satisfying to do.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>